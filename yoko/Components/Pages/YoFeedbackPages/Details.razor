@page "/yofeedbacks/details"
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>YoFeedback</h4>
    <hr />
    @if (yofeedback is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FeedbackDate</dt>
            <dd class="col-sm-10">@yofeedback.FeedbackDate</dd>
            <dt class="col-sm-2">FeedbackText</dt>
            <dd class="col-sm-10">@yofeedback.FeedbackText</dd>
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">@yofeedback.Rating</dd>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <dt class="col-sm-2">GuestId</dt>
                    <dd class="col-sm-10">@yofeedback.GuestId</dd>
                </Authorized>
            </AuthorizeView>
        </dl>
        <div>
            <AuthorizeView Roles="Admin">
                <Authorized>
            <a href="@($"/yofeedbacks/edit?id={yofeedback.Id}")">Edit</a> |
                </Authorized>
            </AuthorizeView>
            <a href="@($"/yofeedbacks")">Back to List</a>
        </div>
    }
</div>

@code {
    YoFeedback? yofeedback;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        yofeedback = await DB.YoFeedbacks.FirstOrDefaultAsync(m => m.Id == Id);

        if (yofeedback is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
