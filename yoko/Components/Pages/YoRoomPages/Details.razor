@page "/yorooms/details"
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>YoRoom</h4>
    <hr />
    @if (yoroom is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">RoomNumber</dt>
            <dd class="col-sm-10">@yoroom.RoomNumber</dd>
            <dt class="col-sm-2">CostForNight</dt>
            <dd class="col-sm-10">@yoroom.CostForNight</dd>
            <dt class="col-sm-2">RoomType</dt>
            <dd class="col-sm-10">@yoroom.RoomType</dd>
            <dt class="col-sm-2">RoomStatus</dt>
            <dd class="col-sm-10">@yoroom.RoomStatus</dd>
        </dl>
        <div>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <a href="@($"/yorooms/edit?id={yoroom.Id}")">Edit</a> |
                </Authorized>
            </AuthorizeView>
            <a href="@($"/yorooms")">Back to List</a>
        </div>
    }
</div>

@code {
    YoRoom? yoroom;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        yoroom = await DB.YoRooms.FirstOrDefaultAsync(m => m.Id == Id);

        if (yoroom is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
