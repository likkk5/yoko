@page "/yoreservations"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.EntityFrameworkCore


<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="yoreservations/create">Create New</a>
</p>

@* <QuickGrid Class="table" Items="DB.YoReservations">
    <PropertyColumn Property="yoreservation => yoreservation.ReservationDate" />
    <PropertyColumn Property="yoreservation => yoreservation.CheckInDate" />
    <PropertyColumn Property="yoreservation => yoreservation.CheckOutDate" />
    <PropertyColumn Property="yoreservation => yoreservation.RoomNumber" />
    <PropertyColumn Property="yoreservation => yoreservation.ReservationStatus" />
    <PropertyColumn Property="yoreservation => yoreservation.Cost" />
    <AuthorizeView Roles="Admin">
        <Authorized>
            <PropertyColumn Property="yoreservation => yoreservation.GuestId" />
        </Authorized>
    </AuthorizeView>

    <TemplateColumn Context="yoreservation">
        <a href="@($"yoreservations/edit?id={yoreservation.Id}")">Edit</a> |
        <a href="@($"yoreservations/details?id={yoreservation.Id}")">Details</a> 
        <AuthorizeView Roles="Admin">
            <Authorized>
                | <a href="@($"yofeedbacks/delete?id={yoreservation.Id}")">Delete</a>
            </Authorized>
        </AuthorizeView>
    </TemplateColumn>
</QuickGrid> *@
@if (Reservations != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Reservation Date</th>
                <th>Check-In Date</th>
                <th>Check-Out Date</th>
                <th>Room Number</th>
                <th>Status</th>
                <th>Cost, $</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in Reservations)
            {
                <tr>
                    <td>@reservation.ReservationDate</td>
                    <td>@reservation.CheckInDate</td>
                    <td>@reservation.CheckOutDate</td>
                    <td>@reservation.RoomNumber</td>
                    <td>@reservation.ReservationStatus</td>
                    <td>@($"{reservation.Cost}$")</td>
                    <td>
                        <a href="@($"yoreservations/edit?id={reservation.Id}")">Edit</a> |
                        <a href="@($"yoreservations/details?id={reservation.Id}")">Details</a>
                        <AuthorizeView Roles="Admin">
                            <Authorized>
                                | <a href="@($"yoreservations/delete?id={reservation.Id}")">Delete</a>
                            </Authorized>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading reservations...</p>
}

@code {

    private List<YoReservation> Reservations;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var currentUser = authState.User;

        if (currentUser.Identity != null && currentUser.Identity.IsAuthenticated)
        {
            var userManager = (UserManager<ApplicationUser>)UserManager;
            var user = await userManager.GetUserAsync(currentUser);

            if (user != null)
            {
                if (currentUser.IsInRole("Admin"))
                {
                    Reservations = await DB.YoReservations.ToListAsync();
                }
                else
                {
                    var guest = await DB.YoGuests.FirstOrDefaultAsync(c => c.UserId == user.Id);
                    if (guest != null)
                    {
                        Reservations = await DB.YoReservations.Where(r => r.GuestId == guest.Id).ToListAsync();
                    }
                    else
                    {
                        
                    }
                }
            }
        }
    }
}
