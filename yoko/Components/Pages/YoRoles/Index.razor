@page "/yoroles"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Identity
@inject RoleManager<IdentityRole> RoleManager

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="yoroles/create">Create New</a>
</p>

@* @if (Roles != null)
{
    <QuickGrid Class="table" Items="Roles">
        <PropertyColumn Property="role => role.Name" Header="Role Name" />

        <TemplateColumn Context="role">
            <a href="@($"yoroles/edit?id={role.Id}")">Edit</a> |
            <a href="@($"yoroles/details?id={role.Id}")">Details</a> |
            <a @onclick="() => DeleteRole(role)">Delete</a>
        </TemplateColumn>
    </QuickGrid>
} *@
@* else
{
    <p>Loading roles...</p>
}
 *@
@if (Roles != null && Roles.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Role Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Roles)
            {
                <tr>
                    <td>@role.Name</td>
                    <td>
                        <a href="@($"yoroles/edit/{role.Id}")">Edit</a> |
                        <a href="@($"yoroles/details/{role.Id}")">Details</a> |
                        <a href="@($"yoroles/delete/{role.Id}")">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No roles found.</p>
}
@code {
    IEnumerable<IdentityRole>? Roles;

    protected override void OnInitialized()
    {
        Roles = RoleManager.Roles.ToList();
    }
}