@page "/YoServices/edit"
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>Edit</PageTitle>

<h1>Edit</h1>

<h4>YoService</h4>
<hr />
@if (YoService is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="YoService" OnValidSubmit="UpdateYoService" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="YoService.Id" value="@YoService.Id" />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="YoService.Name" class="form-control" />
                    <ValidationMessage For="() => YoService.Name" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="cost" class="form-label">Cost:</label>
                    <InputNumber id="cost" @bind-Value="YoService.Cost" class="form-control" />
                    <ValidationMessage For="() => YoService.Cost" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="photo" class="form-label">Upload Photo:</label>
                    <InputFile id="photo" OnChange="HandleFileSelect" />
                </div>
                @if (YoService.Photo != null)
                {
                    <div class="mb-3">
                        <label for="currentPhoto" class="form-label">Current Photo:</label>
                        <img src="@GetCurrentPhoto()" alt="Current Room Photo" class="img-fluid" />
                    </div>
                }
                <button type="submit" class="btn btn-primary">Save</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/yoservices">Back to List</a>
</div>

@code {
    [SupplyParameterFromQuery]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public YoService? YoService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        YoService ??= await DB.YoServices.FirstOrDefaultAsync(m => m.Id == Id);

        if (YoService is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    // Метод для обработки загруженного файла
    public async Task HandleFileSelect(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            if (file != null)
            {
                using var ms = new MemoryStream();
                await file.OpenReadStream().CopyToAsync(ms);
                var bytes = ms.ToArray();

                // Проверяем, что массив байтов не пустой
                if (bytes != null && bytes.Length > 0)
                {
                    YoService.Photo = bytes;
                }
                else
                {
                    Console.WriteLine("The selected file is empty or invalid.");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while handling the file: {ex.Message}");
        }
    }
    // Получение текущей фотографии
    public string GetCurrentPhoto()
    {
        var imageBase64 = Convert.ToBase64String(YoService.Photo);
        return $"data:image/jpeg;base64,{imageBase64}";
    }
    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see https://aka.ms/RazorPagesCRUD.
    public async Task UpdateYoService()
    {
        DB.Attach(YoService!).State = EntityState.Modified;

        try
        {
            await DB.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!YoServiceExists(YoService!.Id))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/yoservices");
    }

    bool YoServiceExists(int id)
    {
        return DB.YoServices.Any(e => e.Id == id);
    }
}
