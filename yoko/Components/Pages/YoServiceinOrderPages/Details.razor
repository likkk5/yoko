@page "/yoserviceinorders/details"
@inject yoko.Data.ApplicationDbContext DB
@using yoko.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>YoServiceinOrder</h4>
    <hr />
    @if (yoserviceinorder is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ServiceId</dt>
            <dd class="col-sm-10">@yoserviceinorder.ServiceId</dd>
            <dt class="col-sm-2">OrderId</dt>
            <dd class="col-sm-10">@yoserviceinorder.OrderId</dd>
            <dt class="col-sm-2">EmployeeId</dt>
            <dd class="col-sm-10">@yoserviceinorder.EmployeeId</dd>
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@yoserviceinorder.Amount</dd>
        </dl>
        <div>
            <a href="@($"/yoserviceinorders/edit?id={yoserviceinorder.Id}")">Edit</a> |
            <a href="@($"/yoserviceinorders")">Back to List</a>
        </div>
    }
</div>

@code {
    YoServiceinOrder? yoserviceinorder;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        yoserviceinorder = await DB.YoServiceinOrders.FirstOrDefaultAsync(m => m.Id == Id);

        if (yoserviceinorder is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
